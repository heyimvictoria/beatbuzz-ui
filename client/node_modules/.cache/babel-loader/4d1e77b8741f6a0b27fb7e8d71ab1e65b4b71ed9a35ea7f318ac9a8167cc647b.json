{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kazak\\\\Desktop\\\\codingProjects\\\\java-projects\\\\beat-buzz\\\\beatbuzz-ui\\\\beatbuzz-ui\\\\client\\\\src\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import Image from \"../assets/image.png\";\n// import Logo from \"../assets/logo.png\";\n// import GoogleSvg from \"../assets/icons8-google.svg\";\n// import { FaEye } from \"react-icons/fa6\";\n// import { FaEyeSlash } from \"react-icons/fa6\";\n\n// const Register = () => {\n//   const [ showPassword, setShowPassword ] = useState(false);\n\n//   return (\n//     <div className=\"login-main\">\n//       <div className=\"login-left\">\n//         <img src={Image} alt=\"\" />\n//       </div>\n//       <div className=\"login-right\">\n//         <div className=\"login-right-container\">\n//           <div className=\"login-logo\">\n//             <img src={Logo} alt=\"\" />\n//           </div>\n//           <div className=\"login-center\">\n//             <h2>Welcome back!</h2>\n//             <p>Please enter your details</p>\n//             <form>\n//               <input type=\"email\" placeholder=\"Email\" />\n//               <div className=\"pass-input-div\">\n//                 <input type={showPassword ? \"text\" : \"password\"} placeholder=\"Password\" />\n//                 {showPassword ? <FaEyeSlash onClick={() => {setShowPassword(!showPassword)}} /> : <FaEye onClick={() => {setShowPassword(!showPassword)}} />}\n\n//               </div>\n\n//               <div className=\"login-center-options\">\n//                 <div className=\"remember-div\">\n//                   <input type=\"checkbox\" id=\"remember-checkbox\" />\n//                   <label htmlFor=\"remember-checkbox\">\n//                     Remember for 30 days\n//                   </label>\n//                 </div>\n//                 <a href=\"#\" className=\"forgot-pass-link\">\n//                   Forgot password?\n//                 </a>\n//               </div>\n//               <div className=\"login-center-buttons\">\n//                 <button type=\"button\">Log In</button>\n//                 <button type=\"button\">\n//                   <img src={GoogleSvg} alt=\"\" />\n//                   Log In with Google\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n\n//           <p className=\"login-bottom-p\">\n//             Don't have an account? <a href=\"#\">Sign Up</a>\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// use axios for sending requests//\n\n// const Register = () => {\n//     const [submit, setSubmit] = useState(false);\n//     return (\n//         <div>\n//             <div>\n//                 <h1>Register</h1>\n//                 <div>\n//                     <input type='email'/>\n//                     <label htmlfor=\"\" >Username</label>\n//                 </div>\n//                 <div>\n//                     <input type='password'/>\n//                     <label htmlfor=\"\" >Password</label>\n//                 </div>\n\n//                 <div>\n//                     {/* <div>\n//                         <input type=\"checkbox\" name=\"\" id=\"\" />\n//                         <label htmlFor=\"Remember Me\"></label>\n//                     </div> */}\n//                     {/* <span>Forgot Password?</span> */}\n//                 </div>\n//                 <button onClick={(e) => setSubmit(true)} type=\"sumbit\">Register</button>\n//                 <div>\n//                     {/* <span>New here?< link to='Register'>Create an Account</link> </span> */}\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\nimport { Link } from \"react-router-dom\";\nimport { useRef, useState, useEffect } from \"react\";\nimport axios from './api/axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst REGISTER_URL = 'http://localhost:8080/api/auth/signup';\nconst Register = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [username, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPwd, setValidPassword] = useState(false);\n  const [pwdFocus, setPasswordFocus] = useState(false);\n  const [matchPassword, setMatchPassword] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setValidName(USER_REGEX.test(username));\n  }, [username]);\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n    setValidMatch(password === matchPassword);\n  }, [password, matchPassword]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [username, password, matchPassword]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // if button enabled with JS hack\n    // const v1 = USER_REGEX.test(username);\n    // const v2 = PWD_REGEX.test(password);\n    // if (!v1 || !v2) {\n    //     setErrMsg(\"Invalid Entry\");\n    //     return;\n    // }\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n        // withCredentials: true\n      });\n      // TODO: remove console.logs before deployment\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n      //console.log(JSON.stringify(response))\n      setSuccess(true);\n      //clear state and controlled inputs\n      setUser('');\n      setPassword('');\n      setMatchPassword('');\n    } catch (err) {\n      var _err$response;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg('Registration Failed');\n      }\n      errRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          value: username,\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\",\n          \"aria-describedby\": \"uidnote\",\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && username && !validName ? \"instructions\" : \"offscreen\",\n          children: [\"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 48\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 54\n          }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true,\n          \"aria-invalid\": validPwd ? \"false\" : \"true\",\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPasswordFocus(true),\n          onBlur: () => setPasswordFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n          children: [\"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 48\n          }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 110\n          }, this), \"Allowed special characters: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 57\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 102\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 140\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 176\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percent\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 216\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pwd\",\n          onChange: e => setMatchPassword(e.target.value),\n          value: matchPassword,\n          required: true,\n          \"aria-invalid\": validMatch ? \"false\" : \"true\",\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n          children: \"Must match the first password input field.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/SignIn\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"wilp8LShGsjPbLCtgkRfJI8+VnA=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Link","useRef","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","USER_REGEX","PWD_REGEX","REGISTER_URL","Register","_s","userRef","errRef","username","setUser","validName","setValidName","userFocus","setUserFocus","password","setPassword","validPwd","setValidPassword","pwdFocus","setPasswordFocus","matchPassword","setMatchPassword","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","test","handleSubmit","e","preventDefault","response","post","JSON","stringify","headers","console","log","data","err","_err$response","status","children","fileName","_jsxFileName","lineNumber","columnNumber","href","ref","className","onSubmit","htmlFor","type","id","autoComplete","onChange","target","value","required","onFocus","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/kazak/Desktop/codingProjects/java-projects/beat-buzz/beatbuzz-ui/beatbuzz-ui/client/src/Register.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Image from \"../assets/image.png\";\r\n// import Logo from \"../assets/logo.png\";\r\n// import GoogleSvg from \"../assets/icons8-google.svg\";\r\n// import { FaEye } from \"react-icons/fa6\";\r\n// import { FaEyeSlash } from \"react-icons/fa6\";\r\n\r\n\r\n\r\n// const Register = () => {\r\n//   const [ showPassword, setShowPassword ] = useState(false);\r\n\r\n\r\n//   return (\r\n//     <div className=\"login-main\">\r\n//       <div className=\"login-left\">\r\n//         <img src={Image} alt=\"\" />\r\n//       </div>\r\n//       <div className=\"login-right\">\r\n//         <div className=\"login-right-container\">\r\n//           <div className=\"login-logo\">\r\n//             <img src={Logo} alt=\"\" />\r\n//           </div>\r\n//           <div className=\"login-center\">\r\n//             <h2>Welcome back!</h2>\r\n//             <p>Please enter your details</p>\r\n//             <form>\r\n//               <input type=\"email\" placeholder=\"Email\" />\r\n//               <div className=\"pass-input-div\">\r\n//                 <input type={showPassword ? \"text\" : \"password\"} placeholder=\"Password\" />\r\n//                 {showPassword ? <FaEyeSlash onClick={() => {setShowPassword(!showPassword)}} /> : <FaEye onClick={() => {setShowPassword(!showPassword)}} />}\r\n                \r\n//               </div>\r\n\r\n//               <div className=\"login-center-options\">\r\n//                 <div className=\"remember-div\">\r\n//                   <input type=\"checkbox\" id=\"remember-checkbox\" />\r\n//                   <label htmlFor=\"remember-checkbox\">\r\n//                     Remember for 30 days\r\n//                   </label>\r\n//                 </div>\r\n//                 <a href=\"#\" className=\"forgot-pass-link\">\r\n//                   Forgot password?\r\n//                 </a>\r\n//               </div>\r\n//               <div className=\"login-center-buttons\">\r\n//                 <button type=\"button\">Log In</button>\r\n//                 <button type=\"button\">\r\n//                   <img src={GoogleSvg} alt=\"\" />\r\n//                   Log In with Google\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n\r\n//           <p className=\"login-bottom-p\">\r\n//             Don't have an account? <a href=\"#\">Sign Up</a>\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n// use axios for sending requests//\r\n\r\n\r\n// const Register = () => {\r\n//     const [submit, setSubmit] = useState(false);\r\n//     return (\r\n//         <div>\r\n//             <div>\r\n//                 <h1>Register</h1>\r\n//                 <div>\r\n//                     <input type='email'/>\r\n//                     <label htmlfor=\"\" >Username</label>\r\n//                 </div>\r\n//                 <div>\r\n//                     <input type='password'/>\r\n//                     <label htmlfor=\"\" >Password</label>\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     {/* <div>\r\n//                         <input type=\"checkbox\" name=\"\" id=\"\" />\r\n//                         <label htmlFor=\"Remember Me\"></label>\r\n//                     </div> */}\r\n//                     {/* <span>Forgot Password?</span> */}\r\n//                 </div>\r\n//                 <button onClick={(e) => setSubmit(true)} type=\"sumbit\">Register</button>\r\n//                 <div>\r\n//                     {/* <span>New here?< link to='Register'>Create an Account</link> </span> */}\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n\r\nimport { Link} from \"react-router-dom\"\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport axios from './api/axios';\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst REGISTER_URL = 'http://localhost:8080/api/auth/signup';\r\n\r\nconst Register = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [username, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [validPwd, setValidPassword] = useState(false);\r\n    const [pwdFocus, setPasswordFocus] = useState(false);\r\n\r\n    const [matchPassword, setMatchPassword] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setValidName(USER_REGEX.test(username));\r\n    }, [username])\r\n\r\n    useEffect(() => {\r\n        setValidPassword(PWD_REGEX.test(password));\r\n        setValidMatch(password === matchPassword);\r\n    }, [password, matchPassword])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [username, password, matchPassword])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // if button enabled with JS hack\r\n        // const v1 = USER_REGEX.test(username);\r\n        // const v2 = PWD_REGEX.test(password);\r\n        // if (!v1 || !v2) {\r\n        //     setErrMsg(\"Invalid Entry\");\r\n        //     return;\r\n        // }\r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({ username, password }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                    // withCredentials: true\r\n                }\r\n            );\r\n            // TODO: remove console.logs before deployment\r\n            console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response))\r\n            setSuccess(true);\r\n            //clear state and controlled inputs\r\n            setUser('');\r\n            setPassword('');\r\n            setMatchPassword('');\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 409) {\r\n                setErrMsg('Username Taken');\r\n            } else {\r\n                setErrMsg('Registration Failed')\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <section>\r\n                    <h1>Success!</h1>\r\n                    <p>\r\n                        <a href=\"#\">Sign In</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"username\">\r\n                            Username:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            value={username}\r\n                            required\r\n                            aria-invalid={validName ? \"false\" : \"true\"}\r\n                            aria-describedby=\"uidnote\"\r\n                            onFocus={() => setUserFocus(true)}\r\n                            onBlur={() => setUserFocus(false)}\r\n                        />\r\n                        <p id=\"uidnote\" className={userFocus && username && !validName ? \"instructions\" : \"offscreen\"}>\r\n                            4 to 24 characters.<br />\r\n                            Must begin with a letter.<br />\r\n                            Letters, numbers, underscores, hyphens allowed.\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            value={password}\r\n                            required\r\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                            aria-describedby=\"pwdnote\"\r\n                            onFocus={() => setPasswordFocus(true)}\r\n                            onBlur={() => setPasswordFocus(false)}\r\n                        />\r\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                            8 to 24 characters.<br />\r\n                              Must include uppercase and lowercase letters, a number and a special character.<br />\r\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"confirm_pwd\">\r\n                            Confirm Password:\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_pwd\"\r\n                            onChange={(e) => setMatchPassword(e.target.value)}\r\n                            value={matchPassword}\r\n                            required\r\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                            aria-describedby=\"confirmnote\"\r\n                            onFocus={() => setMatchFocus(true)}\r\n                            onBlur={() => setMatchFocus(false)}\r\n                        />\r\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                            Must match the first password input field.\r\n                        </p>\r\n\r\n                        <button>Sign Up</button>\r\n                    </form>\r\n                    <p>\r\n                        Already registered?<br />\r\n                        <span className=\"line\">\r\n                            {/* put router link here */}\r\n                            {/* <Link> */}\r\n                            <a href=\"/SignIn\">Sign In</a>\r\n                            {/* </Link> */}\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}