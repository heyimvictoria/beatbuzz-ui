{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kazak\\\\Desktop\\\\codingProjects\\\\java-projects\\\\beat-buzz\\\\beatbuzz-ui\\\\beatbuzz-ui\\\\client\\\\src\\\\Dashbord.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport Player from \"./Player\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport \"./Sort.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"a749ae54533d4373a5cd180d822cf1e6\"\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [sortingPreference, setSortingPreference] = useState('popularity'); // Default sorting \n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch('');\n  }\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    console.log(\"Access Token:\", accessToken); // Add this line to check the access token\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return;\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      console.log(\"Search results:\", res.body.tracks.items);\n\n      // Sorting the tracks based on the preference\n      let sortedTracks = res.body.tracks.items;\n      if (sortingPreference === \"popularity\") {\n        sortedTracks.sort((a, b) => b.popularity - a.popularity);\n      } else if (sortingPreference === \"release_date\") {\n        sortedTracks.sort((a, b) => new Date(b.album.release_date) - new Date(a.album.release_date));\n      }\n      setSearchResults(res.body.tracks.items.map(track => {\n        // Check if album and images exist\n        if (!track.album || !track.album.images) {\n          return null; // Skip this track if album or images are missing\n        }\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }).filter(track => track !== null)); // Filter out null values\n    }).catch(error => {\n      console.error(\"Error searching tracks:\", error);\n    });\n    return () => {\n      cancel = true;\n    };\n  }, [accessToken, search, sortingPreference]);\n  return (\n    /*#__PURE__*/\n    //this container is the search bar\n    _jsxDEV(Container, {\n      className: \"d-flex flex-column py-2\",\n      style: {\n        height: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"search\",\n          placeholder: \"Search Songs/Artists\",\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Sort by:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: sortingPreference,\n              onChange: e => setSortingPreference(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"popularity\",\n                children: \"Popularity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"release_date\",\n                children: \"Recent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1 my-2\",\n        style: {\n          overflowY: \"auto\"\n        },\n        children: searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n          track: track,\n          chooseTrack: chooseTrack\n        }, track.uri, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Player, {\n          accessToken: accessToken,\n          trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Dashboard, \"fCmDaxJ6gKl6GCRrkSmKpbfvo5Y=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useAuth","TrackSearchResult","Player","Container","Form","SpotifyWebApi","jsxDEV","_jsxDEV","spotifyApi","clientId","Dashboard","code","_s","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","sortingPreference","setSortingPreference","chooseTrack","track","setAccessToken","console","log","cancel","searchTracks","then","res","body","tracks","items","sortedTracks","sort","a","b","popularity","Date","album","release_date","map","images","smallestAlbumImage","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","filter","catch","error","className","style","children","Control","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","overflowY","trackUri","_c","$RefreshReg$"],"sources":["C:/Users/kazak/Desktop/codingProjects/java-projects/beat-buzz/beatbuzz-ui/beatbuzz-ui/client/src/Dashbord.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport useAuth from \"./useAuth\";\r\nimport TrackSearchResult from \"./TrackSearchResult\";\r\nimport Player from \"./Player\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport \"./Sort.css\"\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: \"a749ae54533d4373a5cd180d822cf1e6\",\r\n});\r\n\r\nexport default function Dashboard({ code }) {\r\n  const accessToken = useAuth(code);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [playingTrack, setPlayingTrack] = useState()\r\n  const [sortingPreference, setSortingPreference] = useState('popularity'); // Default sorting \r\n\r\n  function chooseTrack(track) {\r\n    setPlayingTrack(track)\r\n    setSearch('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.setAccessToken(accessToken);\r\n    console.log(\"Access Token:\", accessToken); // Add this line to check the access token\r\n\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!search) return;\r\n    if (!accessToken) return;\r\n\r\n    let cancel = false;\r\n\r\n    spotifyApi\r\n      .searchTracks(search)\r\n      .then((res) => {\r\n        if (cancel) return;\r\n        console.log(\"Search results:\", res.body.tracks.items);\r\n\r\n                // Sorting the tracks based on the preference\r\n                let sortedTracks = res.body.tracks.items;\r\n                if (sortingPreference === \"popularity\") {\r\n                  sortedTracks.sort((a, b) => b.popularity - a.popularity);\r\n                } else if (sortingPreference === \"release_date\") {\r\n                  sortedTracks.sort((a, b) => new Date(b.album.release_date) - new Date(a.album.release_date));\r\n                }\r\n        \r\n        setSearchResults(\r\n          res.body.tracks.items\r\n            .map((track) => {\r\n              // Check if album and images exist\r\n              if (!track.album || !track.album.images) {\r\n                return null; // Skip this track if album or images are missing\r\n              }\r\n\r\n              const smallestAlbumImage = track.album.images.reduce(\r\n                (smallest, image) => {\r\n                  if (image.height < smallest.height) return image;\r\n                  return smallest;\r\n                },\r\n                track.album.images[0]\r\n              );\r\n\r\n              return {\r\n                artist: track.artists[0].name,\r\n                title: track.name,\r\n                uri: track.uri,\r\n                albumUrl: smallestAlbumImage.url,\r\n              };\r\n            })\r\n            .filter((track) => track !== null)\r\n        ); // Filter out null values\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error searching tracks:\", error);\r\n      });\r\n\r\n    return () => {\r\n      cancel = true;\r\n    };\r\n  }, [accessToken, search, sortingPreference]);\r\n\r\n\r\n  return (\r\n\r\n    //this container is the search bar\r\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}> \r\n          <div className=\"search-bar\">\r\n      <Form.Control\r\n        type=\"search\"\r\n        placeholder=\"Search Songs/Artists\"\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n            <div className=\"dropdown\">\r\n        <label>\r\n          Sort by:\r\n          <select value={sortingPreference} onChange={(e) => setSortingPreference(e.target.value)}>\r\n            <option value=\"popularity\">Popularity</option>\r\n            <option value=\"release_date\">Recent</option>\r\n          </select>\r\n        </label>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResults.map((track) => (\r\n          <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n        ))}\r\n      </div>\r\n      <div> <Player accessToken={accessToken} trackUri={playingTrack?.uri}/></div>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}